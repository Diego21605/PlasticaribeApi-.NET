// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlasticaribeApi_Prueba.Data;

#nullable disable

namespace PlasticaribeApi_Prueba.Migrations
{
    [DbContext(typeof(dataContext))]
    [Migration("20221111204457_TablaDetalles_OrdenesCompras2")]
    partial class TablaDetalles_OrdenesCompras2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Archivos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Categoria_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("date");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Ubicacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Usua_Id")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("Categoria_Id");

                    b.HasIndex("Usua_Id");

                    b.ToTable("Archivos");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Area", b =>
                {
                    b.Property<long>("Area_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Area_Id"), 1L, 1);

                    b.Property<string>("Area_Descripcion")
                        .HasColumnType("text");

                    b.Property<string>("Area_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Area_Id");

                    b.ToTable("Areas");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Asignacion_BOPP", b =>
                {
                    b.Property<long>("AsigBOPP_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("AsigBOPP_Id"), 1L, 1);

                    b.Property<DateTime>("AsigBOPP_FechaEntrega")
                        .HasColumnType("Date");

                    b.Property<string>("AsigBOPP_Observacion")
                        .HasColumnType("text");

                    b.Property<int>("Estado_Id")
                        .HasColumnType("int");

                    b.Property<long>("Usua_Id")
                        .HasColumnType("bigint");

                    b.HasKey("AsigBOPP_Id");

                    b.HasIndex("Estado_Id");

                    b.HasIndex("Usua_Id");

                    b.ToTable("Asignaciones_BOPP");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Asignacion_MatPrima", b =>
                {
                    b.Property<long>("AsigMp_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("AsigMp_Id"), 1L, 1);

                    b.Property<long>("AsigMP_OrdenTrabajo")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("AsigMp_FechaEntrega")
                        .HasColumnType("Date");

                    b.Property<int>("AsigMp_Maquina")
                        .HasColumnType("int");

                    b.Property<string>("AsigMp_Observacion")
                        .HasColumnType("text");

                    b.Property<int>("Estado_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Estado_OrdenTrabajo")
                        .HasColumnType("int");

                    b.Property<long>("Usua_Id")
                        .HasColumnType("bigint");

                    b.HasKey("AsigMp_Id");

                    b.HasIndex("Estado_Id");

                    b.HasIndex("Estado_OrdenTrabajo");

                    b.HasIndex("Usua_Id");

                    b.ToTable("Asignaciones_MatPrima");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Asignacion_MatPrimaXTinta", b =>
                {
                    b.Property<long>("AsigMPxTinta_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("AsigMPxTinta_Id"), 1L, 1);

                    b.Property<decimal>("AsigMPxTinta_Cantidad")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<DateTime>("AsigMPxTinta_FechaEntrega")
                        .HasColumnType("Date");

                    b.Property<string>("AsigMPxTinta_Observacion")
                        .HasColumnType("text");

                    b.Property<int>("Estado_Id")
                        .HasColumnType("int");

                    b.Property<long>("Tinta_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<long>("Usua_Id")
                        .HasColumnType("bigint");

                    b.HasKey("AsigMPxTinta_Id");

                    b.HasIndex("Estado_Id");

                    b.HasIndex("Tinta_Id");

                    b.HasIndex("UndMed_Id");

                    b.HasIndex("Usua_Id");

                    b.ToTable("Asignaciones_MatPrimasXTintas");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.AsignacionProducto_FacturaVenta", b =>
                {
                    b.Property<long>("AsigProdFV_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("AsigProdFV_Id"), 1L, 1);

                    b.Property<DateTime>("AsigProdFV_Fecha")
                        .HasColumnType("date");

                    b.Property<DateTime>("AsigProdFV_FechaEnvio")
                        .HasColumnType("date");

                    b.Property<string>("AsigProdFV_Hora")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AsigProdFV_Observacion")
                        .HasColumnType("text");

                    b.Property<string>("AsigProdFV_PlacaCamion")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<long>("Cli_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("FacturaVta_Id")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NotaCredito_Id")
                        .HasColumnType("varchar(100)");

                    b.Property<long>("Usua_Conductor")
                        .HasColumnType("bigint");

                    b.Property<long>("Usua_Id")
                        .HasColumnType("bigint");

                    b.HasKey("AsigProdFV_Id");

                    b.HasIndex("Cli_Id");

                    b.HasIndex("Usua_Conductor");

                    b.HasIndex("Usua_Id");

                    b.ToTable("AsignacionesProductos_FacturasVentas");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.BOPP", b =>
                {
                    b.Property<long>("BOPP_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("BOPP_Id"), 1L, 1);

                    b.Property<decimal>("BOPP_Ancho")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BOPP_CantidadInicialKg")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("BOPP_CantidadMicras")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BOPP_Descripcion")
                        .HasColumnType("varchar(MAX)");

                    b.Property<DateTime>("BOPP_FechaIngreso")
                        .HasColumnType("Date");

                    b.Property<string>("BOPP_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)");

                    b.Property<decimal>("BOPP_Precio")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("BOPP_Serial")
                        .HasColumnType("bigint");

                    b.Property<decimal>("BOPP_Stock")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CatMP_Id")
                        .HasColumnType("int");

                    b.Property<int>("TpBod_Id")
                        .HasColumnType("int");

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("UndMed_Kg")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<long>("Usua_Id")
                        .HasColumnType("bigint");

                    b.HasKey("BOPP_Id");

                    b.HasIndex("CatMP_Id");

                    b.HasIndex("TpBod_Id");

                    b.HasIndex("UndMed_Id");

                    b.HasIndex("UndMed_Kg");

                    b.HasIndex("Usua_Id");

                    b.ToTable("BOPP");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.cajaCompensacion", b =>
                {
                    b.Property<long>("cajComp_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("TipoIdentificacion_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("cajComp_Ciudad")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<long>("cajComp_CuentaBancaria")
                        .HasColumnType("bigint");

                    b.Property<string>("cajComp_Direccion")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("cajComp_Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("cajComp_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("cajComp_Telefono")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("cajComp_Id");

                    b.HasIndex("TipoIdentificacion_Id");

                    b.ToTable("Cajas_Compensaciones");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Categoria_Insumo", b =>
                {
                    b.Property<int>("CatInsu_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CatInsu_Id"), 1L, 1);

                    b.Property<string>("CatInsu_Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CatInsu_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CatInsu_UrlImagen")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CatInsu_Id");

                    b.ToTable("Categorias_Insumos");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Categoria_MatPrima", b =>
                {
                    b.Property<int>("CatMP_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CatMP_Id"), 1L, 1);

                    b.Property<string>("CatMP_Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("CatMP_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)");

                    b.HasKey("CatMP_Id");

                    b.ToTable("Categorias_MatPrima");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Categorias_Archivos", b =>
                {
                    b.Property<int>("Categoria_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Categoria_Id"), 1L, 1);

                    b.Property<string>("Categoria_Descricion")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Categoria_Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Categoria_Id");

                    b.ToTable("Categorias_Archivos");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Cliente_Producto", b =>
                {
                    b.Property<int>("Prod_Id")
                        .HasColumnType("int");

                    b.Property<long>("Cli_Id")
                        .HasColumnType("bigint");

                    b.HasKey("Prod_Id", "Cli_Id");

                    b.HasIndex("Cli_Id");

                    b.ToTable("Clientes_Productos");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Clientes", b =>
                {
                    b.Property<long>("Cli_Id")
                        .HasColumnType("bigint");

                    b.Property<int>("Cli_Codigo")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Cli_Codigo"), 1L, 1);

                    b.Property<string>("Cli_Email")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("Cli_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("Cli_Telefono")
                        .IsRequired()
                        .HasColumnType("varchar(60)");

                    b.Property<int?>("Estado_Id")
                        .HasColumnType("int");

                    b.Property<int>("TPCli_Id")
                        .HasColumnType("int");

                    b.Property<string>("TipoIdentificacion_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<long>("usua_Id")
                        .HasColumnType("bigint");

                    b.HasKey("Cli_Id");

                    b.HasIndex("Estado_Id");

                    b.HasIndex("TPCli_Id");

                    b.HasIndex("TipoIdentificacion_Id");

                    b.HasIndex("usua_Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Detalle_OrdenCompra", b =>
                {
                    b.Property<long>("Doc_Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Doc_Codigo"), 1L, 1);

                    b.Property<long>("BOPP_Id")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Doc_CantidadPedida")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Doc_PrecioUnitario")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("MatPri_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("Oc_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("Tinta_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("Doc_Codigo");

                    b.HasIndex("BOPP_Id");

                    b.HasIndex("MatPri_Id");

                    b.HasIndex("Oc_Id");

                    b.HasIndex("Tinta_Id");

                    b.HasIndex("UndMed_Id");

                    b.ToTable("Detalles_OrdenesCompras");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.DetalleAsignacion_BOPP", b =>
                {
                    b.Property<long>("DtAsigBOPP_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("DtAsigBOPP_Id"), 1L, 1);

                    b.Property<long>("AsigBOPP_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("BOPP_Id")
                        .HasColumnType("bigint");

                    b.Property<decimal>("DtAsigBOPP_Cantidad")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<long>("DtAsigBOPP_OrdenTrabajo")
                        .HasColumnType("bigint");

                    b.Property<int?>("Estado_OrdenTrabajo")
                        .HasColumnType("int");

                    b.Property<string>("Proceso_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("TpDoc_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("DtAsigBOPP_Id");

                    b.HasIndex("AsigBOPP_Id");

                    b.HasIndex("BOPP_Id");

                    b.HasIndex("Estado_OrdenTrabajo");

                    b.HasIndex("Proceso_Id");

                    b.HasIndex("TpDoc_Id");

                    b.HasIndex("UndMed_Id");

                    b.ToTable("DetallesAsignaciones_BOPP");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.DetalleAsignacion_MateriaPrima", b =>
                {
                    b.Property<long>("AsigMp_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("MatPri_Id")
                        .HasColumnType("bigint");

                    b.Property<decimal>("DtAsigMp_Cantidad")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<string>("Proceso_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("AsigMp_Id", "MatPri_Id");

                    b.HasIndex("MatPri_Id");

                    b.HasIndex("Proceso_Id");

                    b.HasIndex("UndMed_Id");

                    b.ToTable("DetallesAsignaciones_MateriasPrimas");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.DetalleAsignacion_MatPrimaXTinta", b =>
                {
                    b.Property<long>("AsigMPxTinta_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("MatPri_Id")
                        .HasColumnType("bigint");

                    b.Property<decimal>("DetAsigMPxTinta_Cantidad")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<string>("Proceso_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("AsigMPxTinta_Id", "MatPri_Id");

                    b.HasIndex("MatPri_Id");

                    b.HasIndex("Proceso_Id");

                    b.HasIndex("UndMed_Id");

                    b.ToTable("DetallesAsignaciones_MatPrimasXTintas");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.DetalleAsignacion_Tinta", b =>
                {
                    b.Property<long>("AsigMp_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("Tinta_Id")
                        .HasColumnType("bigint");

                    b.Property<decimal>("DtAsigTinta_Cantidad")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<string>("Proceso_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("AsigMp_Id", "Tinta_Id");

                    b.HasIndex("Proceso_Id");

                    b.HasIndex("Tinta_Id");

                    b.HasIndex("UndMed_Id");

                    b.ToTable("DetalleAsignaciones_Tintas");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.DetalleDevolucion_MateriaPrima", b =>
                {
                    b.Property<long>("DevMatPri_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("MatPri_Id")
                        .HasColumnType("bigint");

                    b.Property<decimal>("DtDevMatPri_CantidadDevuelta")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<string>("Proceso_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("DevMatPri_Id", "MatPri_Id");

                    b.HasIndex("MatPri_Id");

                    b.HasIndex("Proceso_Id");

                    b.HasIndex("UndMed_Id");

                    b.ToTable("DetallesDevoluciones_MateriasPrimas");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.DetalleDevolucion_ProductoFacturado", b =>
                {
                    b.Property<int>("DtDevProdFact_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DtDevProdFact_Id"), 1L, 1);

                    b.Property<long>("DevProdFact_Id")
                        .HasColumnType("bigint");

                    b.Property<decimal>("DtDevProdFact_Cantidad")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<int>("Prod_Id")
                        .HasColumnType("int");

                    b.Property<long>("Rollo_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("DtDevProdFact_Id");

                    b.HasIndex("DevProdFact_Id");

                    b.HasIndex("Prod_Id");

                    b.HasIndex("UndMed_Id");

                    b.ToTable("DetallesDevoluciones_ProductosFacturados");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.DetalleEntradaRollo_Producto", b =>
                {
                    b.Property<long>("DtEntRolloProd_Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("DtEntRolloProd_Codigo"), 1L, 1);

                    b.Property<decimal>("DtEntRolloProd_Cantidad")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<long>("DtEntRolloProd_OT")
                        .HasColumnType("bigint");

                    b.Property<long>("EntRolloProd_Id")
                        .HasColumnType("bigint");

                    b.Property<int>("Estado_Id")
                        .HasColumnType("int");

                    b.Property<string>("Proceso_Id")
                        .HasColumnType("varchar(10)");

                    b.Property<decimal>("Prod_CantBolsasBulto")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("Prod_CantBolsasFacturadas")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("Prod_CantBolsasPaquete")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("Prod_CantBolsasRestates")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("Prod_CantPaquetesRestantes")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<int>("Prod_Id")
                        .HasColumnType("int");

                    b.Property<long>("Rollo_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(3);

                    b.Property<string>("UndMed_Prod")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("UndMed_Rollo")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("DtEntRolloProd_Codigo");

                    b.HasIndex("EntRolloProd_Id");

                    b.HasIndex("Estado_Id");

                    b.HasIndex("Proceso_Id");

                    b.HasIndex("Prod_Id");

                    b.HasIndex("UndMed_Prod");

                    b.HasIndex("UndMed_Rollo");

                    b.ToTable("DetallesEntradasRollos_Productos");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.DetallePreEntrega_RolloDespacho", b =>
                {
                    b.Property<long>("DtlPreEntRollo_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("DtlPreEntRollo_Id"), 1L, 1);

                    b.Property<long>("Cli_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(5);

                    b.Property<decimal>("DtlPreEntRollo_Cantidad")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("DtlPreEntRollo_OT")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<long>("PreEntRollo_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Proceso_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<int>("Prod_Id")
                        .HasColumnType("int")
                        .HasColumnOrder(3);

                    b.Property<long>("Rollo_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("UndMed_Producto")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnOrder(4);

                    b.Property<string>("UndMed_Rollo")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("DtlPreEntRollo_Id");

                    b.HasIndex("Cli_Id");

                    b.HasIndex("PreEntRollo_Id");

                    b.HasIndex("Proceso_Id");

                    b.HasIndex("Prod_Id");

                    b.HasIndex("UndMed_Producto");

                    b.HasIndex("UndMed_Rollo");

                    b.ToTable("DetallesPreEntrega_RollosDespacho");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.DetalleRecuperado_MateriaPrima", b =>
                {
                    b.Property<long>("RecMp_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("MatPri_Id")
                        .HasColumnType("bigint");

                    b.Property<decimal>("RecMatPri_Cantidad")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TpRecu_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("RecMp_Id", "MatPri_Id");

                    b.HasIndex("MatPri_Id");

                    b.HasIndex("TpRecu_Id");

                    b.HasIndex("UndMed_Id");

                    b.ToTable("DetallesRecuperados_MateriasPrimas");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Detalles_EntradaTintas", b =>
                {
                    b.Property<int>("EntTinta_Id")
                        .HasColumnType("int");

                    b.Property<long>("Tinta_Id")
                        .HasColumnType("bigint");

                    b.Property<decimal>("DtEntTinta_Cantidad")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("EntTinta_Id", "Tinta_Id");

                    b.HasIndex("Tinta_Id");

                    b.HasIndex("UndMed_Id");

                    b.ToTable("Detalles_EntradaTintas");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.DetallesAsignacionProducto_FacturaVenta", b =>
                {
                    b.Property<long>("DtAsigProdFV_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("DtAsigProdFV_Id"), 1L, 1);

                    b.Property<long>("AsigProdFV_Id")
                        .HasColumnType("bigint");

                    b.Property<decimal>("DtAsigProdFV_Cantidad")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("Prod_CantidadUnidades")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<int>("Prod_Id")
                        .HasColumnType("int");

                    b.Property<long>("Rollo_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("DtAsigProdFV_Id");

                    b.HasIndex("AsigProdFV_Id");

                    b.HasIndex("Prod_Id");

                    b.HasIndex("UndMed_Id");

                    b.ToTable("DetallesAsignacionesProductos_FacturasVentas");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Devolucion_MatPrima", b =>
                {
                    b.Property<long>("DevMatPri_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("DevMatPri_Id"), 1L, 1);

                    b.Property<DateTime>("DevMatPri_Fecha")
                        .HasColumnType("Date");

                    b.Property<string>("DevMatPri_Motivo")
                        .HasColumnType("text");

                    b.Property<long>("DevMatPri_OrdenTrabajo")
                        .HasColumnType("bigint");

                    b.Property<long>("Usua_Id")
                        .HasColumnType("bigint");

                    b.HasKey("DevMatPri_Id");

                    b.HasIndex("Usua_Id");

                    b.ToTable("Devoluciones_MatPrima");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Devolucion_ProductoFacturado", b =>
                {
                    b.Property<long>("DevProdFact_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("DevProdFact_Id"), 1L, 1);

                    b.Property<long>("Cli_Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DevProdFact_Fecha")
                        .HasColumnType("date");

                    b.Property<string>("DevProdFact_Observacion")
                        .HasColumnType("text");

                    b.Property<string>("FacturaVta_Id")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("TipoDevProdFact_Id")
                        .HasColumnType("int");

                    b.Property<long>("Usua_Id")
                        .HasColumnType("bigint");

                    b.HasKey("DevProdFact_Id");

                    b.HasIndex("Cli_Id");

                    b.HasIndex("TipoDevProdFact_Id");

                    b.HasIndex("Usua_Id");

                    b.ToTable("Devoluciones_ProductosFacturados");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Empresa", b =>
                {
                    b.Property<long>("Empresa_Id")
                        .HasColumnType("bigint");

                    b.Property<int>("Empresa_COdigoPostal")
                        .HasColumnType("int");

                    b.Property<string>("Empresa_Ciudad")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Empresa_Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Empresa_Codigo"), 1L, 1);

                    b.Property<string>("Empresa_Correo")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Empresa_Direccion")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Empresa_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Empresa_Telefono")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TipoIdentificacion_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("Empresa_Id");

                    b.HasIndex("TipoIdentificacion_Id");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Entrada_Tintas", b =>
                {
                    b.Property<int>("EntTinta_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntTinta_Id"), 1L, 1);

                    b.Property<string>("EntTinta_Observacion")
                        .HasColumnType("text");

                    b.Property<long>("Usua_Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("entTinta_FechaEntrada")
                        .HasColumnType("Date");

                    b.HasKey("EntTinta_Id");

                    b.HasIndex("Usua_Id");

                    b.ToTable("Entradas_Tintas");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.EntradaRollo_Producto", b =>
                {
                    b.Property<long>("EntRolloProd_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("EntRolloProd_Id"), 1L, 1);

                    b.Property<DateTime>("EntRolloProd_Fecha")
                        .HasColumnType("date");

                    b.Property<string>("EntRolloProd_Observacion")
                        .HasColumnType("text");

                    b.Property<long>("Usua_Id")
                        .HasColumnType("bigint");

                    b.HasKey("EntRolloProd_Id");

                    b.HasIndex("Usua_Id");

                    b.ToTable("EntradasRollos_Productos");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.EPS", b =>
                {
                    b.Property<long>("eps_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("TipoIdentificacion_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("eps_Ciudad")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("eps_Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("eps_Codigo"), 1L, 1);

                    b.Property<long>("eps_CuentaBancaria")
                        .HasColumnType("bigint");

                    b.Property<string>("eps_Direccion")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("eps_Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("eps_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("eps_Telefono")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("eps_Id");

                    b.HasIndex("TipoIdentificacion_Id");

                    b.ToTable("EPS");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Estado", b =>
                {
                    b.Property<int>("Estado_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Estado_Id"), 1L, 1);

                    b.Property<string>("Estado_Descripcion")
                        .HasColumnType("text");

                    b.Property<string>("Estado_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("TpEstado_Id")
                        .HasColumnType("int");

                    b.HasKey("Estado_Id");

                    b.HasIndex("TpEstado_Id");

                    b.ToTable("Estados");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Estados_ProcesosOT", b =>
                {
                    b.Property<long>("EstProcOT_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("EstProcOT_Id"), 1L, 1);

                    b.Property<decimal>("EstProcOT_CantProdFacturada")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EstProcOT_CantProdIngresada")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EstProcOT_CantidadPedida")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("EstProcOT_CantidadPedidaUnd")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EstProcOT_CorteKg")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("EstProcOT_DiffDiasInicio_Fin")
                        .HasColumnType("int");

                    b.Property<decimal>("EstProcOT_DobladoKg")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EstProcOT_EmpaqueKg")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EstProcOT_ExtrusionKg")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("EstProcOT_FechaCreacion")
                        .HasColumnType("date");

                    b.Property<DateTime?>("EstProcOT_FechaFinal")
                        .HasColumnType("date");

                    b.Property<DateTime?>("EstProcOT_FechaInicio")
                        .HasColumnType("date");

                    b.Property<string>("EstProcOT_HoraFinal")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EstProcOT_HoraInicio")
                        .HasColumnType("varchar(20)");

                    b.Property<decimal>("EstProcOT_ImpresionKg")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EstProcOT_LaminadoKg")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("EstProcOT_Observacion")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)");

                    b.Property<long>("EstProcOT_OrdenTrabajo")
                        .HasColumnType("bigint");

                    b.Property<decimal>("EstProcOT_RotograbadoKg")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EstProcOT_SelladoKg")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EstProcOT_SelladoUnd")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EstProcOT_WiketiadoKg")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EstProcOT_WiketiadoUnd")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Estado_Id")
                        .HasColumnType("int");

                    b.Property<int>("Falla_Id")
                        .HasColumnType("int");

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<long?>("Usua_Id")
                        .HasColumnType("bigint");

                    b.HasKey("EstProcOT_Id");

                    b.HasIndex("Estado_Id");

                    b.HasIndex("Falla_Id");

                    b.HasIndex("UndMed_Id");

                    b.HasIndex("Usua_Id");

                    b.ToTable("Estados_ProcesosOT");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Existencia_Productos", b =>
                {
                    b.Property<long>("ExProd_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ExProd_Id"), 1L, 1);

                    b.Property<decimal>("ExProd_CantMinima")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ExProd_Cantidad")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnOrder(2);

                    b.Property<decimal>("ExProd_Precio")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ExProd_PrecioExistencia")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ExProd_PrecioSinInflacion")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ExProd_PrecioVenta")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Prod_Id")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<int>("TpBod_Id")
                        .HasColumnType("int")
                        .HasColumnOrder(4);

                    b.Property<string>("TpMoneda_Id")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnOrder(3);

                    b.HasKey("ExProd_Id");

                    b.HasIndex("Prod_Id");

                    b.HasIndex("TpBod_Id");

                    b.HasIndex("TpMoneda_Id");

                    b.HasIndex("UndMed_Id");

                    b.ToTable("Existencias_Productos");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Factura_Compra", b =>
                {
                    b.Property<long>("Facco_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Facco_Id"), 1L, 1);

                    b.Property<int>("Estado_Id")
                        .HasColumnType("int");

                    b.Property<string>("Facco_Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("Facco_FechaFactura")
                        .HasColumnType("Date");

                    b.Property<DateTime>("Facco_FechaVencimiento")
                        .HasColumnType("Date");

                    b.Property<string>("Facco_Observacion")
                        .HasColumnType("text");

                    b.Property<decimal>("Facco_ValorTotal")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("Prov_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("TpDoc_Id")
                        .HasColumnType("varchar(10)");

                    b.Property<long>("Usua_Id")
                        .HasColumnType("bigint");

                    b.HasKey("Facco_Id");

                    b.HasIndex("Estado_Id");

                    b.HasIndex("Prov_Id");

                    b.HasIndex("TpDoc_Id");

                    b.HasIndex("Usua_Id");

                    b.ToTable("Facturas_Compras");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.FacturaCompra_MateriaPrima", b =>
                {
                    b.Property<long>("Facco_Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Facco_Codigo"), 1L, 1);

                    b.Property<decimal>("FaccoMatPri_Cantidad")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)")
                        .HasColumnOrder(4);

                    b.Property<decimal>("FaccoMatPri_ValorUnitario")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnOrder(6);

                    b.Property<long>("Facco_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<long>("MatPri_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<long>("Tinta_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(3);

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnOrder(5);

                    b.HasKey("Facco_Codigo");

                    b.HasIndex("Facco_Id");

                    b.HasIndex("MatPri_Id");

                    b.HasIndex("Tinta_Id");

                    b.HasIndex("UndMed_Id");

                    b.ToTable("FacturasCompras_MateriaPrimas");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Falla_Tecnica", b =>
                {
                    b.Property<int>("Falla_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Falla_Id"), 1L, 1);

                    b.Property<string>("Falla_Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("Falla_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("TipoFalla_Id")
                        .HasColumnType("int");

                    b.HasKey("Falla_Id");

                    b.HasIndex("TipoFalla_Id");

                    b.ToTable("Fallas_Tecnicas");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.fondoPension", b =>
                {
                    b.Property<long>("fPen_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("TipoIdentificacion_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("fPen_Ciudad")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("fPen_Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("fPen_Codigo"), 1L, 1);

                    b.Property<long>("fPen_CuentaBancaria")
                        .HasColumnType("bigint");

                    b.Property<string>("fPen_Direccion")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("fPen_Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("fPen_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("fPen_Telefono")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("fPen_Id");

                    b.HasIndex("TipoIdentificacion_Id");

                    b.ToTable("FondosPensiones");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Formato", b =>
                {
                    b.Property<long>("Formato_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Formato_Id"), 1L, 1);

                    b.Property<string>("Formato_Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Formato_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Formato_Id");

                    b.ToTable("Formato");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Insumo", b =>
                {
                    b.Property<int>("Insu_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Insu_Id"), 1L, 1);

                    b.Property<int>("CatInsu_Id")
                        .HasColumnType("int");

                    b.Property<string>("Insu_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Insu_Stock")
                        .IsRequired()
                        .HasPrecision(18, 2)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("Insu_Id");

                    b.HasIndex("CatInsu_Id");

                    b.HasIndex("UndMed_Id");

                    b.ToTable("Insumos");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.InventarioInicialXDia_MatPrima", b =>
                {
                    b.Property<long>("MatPri_Id")
                        .HasColumnType("bigint");

                    b.Property<decimal>("InvInicial_Stock")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("MatPri_Id");

                    b.HasIndex("UndMed_Id");

                    b.ToTable("InventarioInicialXDias_MatPrima");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Laminado_Capa", b =>
                {
                    b.Property<int>("LamCapa_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LamCapa_Id"), 1L, 1);

                    b.Property<string>("LamCapa_Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LamCapa_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("LamCapa_Id");

                    b.ToTable("Laminado_Capa");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Materia_Prima", b =>
                {
                    b.Property<long>("MatPri_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("MatPri_Id"), 1L, 1);

                    b.Property<int>("CatMP_Id")
                        .HasColumnType("int");

                    b.Property<string>("MatPri_Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("MatPri_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)");

                    b.Property<decimal>("MatPri_Precio")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MatPri_Stock")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TpBod_Id")
                        .HasColumnType("int");

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("MatPri_Id");

                    b.HasIndex("CatMP_Id");

                    b.HasIndex("TpBod_Id");

                    b.HasIndex("UndMed_Id");

                    b.ToTable("Materias_Primas");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Material_MatPrima", b =>
                {
                    b.Property<int>("Material_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Material_Id"), 1L, 1);

                    b.Property<string>("Material_Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("Material_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Material_Id");

                    b.ToTable("Materiales_MatPrima");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Mezcla", b =>
                {
                    b.Property<long>("Mezcla_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Mezcla_Id"), 1L, 1);

                    b.Property<int>("Material_Id")
                        .HasColumnType("int");

                    b.Property<int>("MezMaterial_Id1xCapa1")
                        .HasColumnType("int");

                    b.Property<int>("MezMaterial_Id1xCapa2")
                        .HasColumnType("int");

                    b.Property<int>("MezMaterial_Id1xCapa3")
                        .HasColumnType("int");

                    b.Property<int>("MezMaterial_Id2xCapa1")
                        .HasColumnType("int");

                    b.Property<int>("MezMaterial_Id2xCapa2")
                        .HasColumnType("int");

                    b.Property<int>("MezMaterial_Id2xCapa3")
                        .HasColumnType("int");

                    b.Property<int>("MezMaterial_Id3xCapa1")
                        .HasColumnType("int");

                    b.Property<int>("MezMaterial_Id3xCapa2")
                        .HasColumnType("int");

                    b.Property<int>("MezMaterial_Id3xCapa3")
                        .HasColumnType("int");

                    b.Property<int>("MezMaterial_Id4xCapa1")
                        .HasColumnType("int");

                    b.Property<int>("MezMaterial_Id4xCapa2")
                        .HasColumnType("int");

                    b.Property<int>("MezMaterial_Id4xCapa3")
                        .HasColumnType("int");

                    b.Property<int>("MezPigmto_Id1xCapa1")
                        .HasColumnType("int");

                    b.Property<int>("MezPigmto_Id1xCapa2")
                        .HasColumnType("int");

                    b.Property<int>("MezPigmto_Id1xCapa3")
                        .HasColumnType("int");

                    b.Property<int>("MezPigmto_Id2xCapa1")
                        .HasColumnType("int");

                    b.Property<int>("MezPigmto_Id2xCapa2")
                        .HasColumnType("int");

                    b.Property<int>("MezPigmto_Id2xCapa3")
                        .HasColumnType("int");

                    b.Property<DateTime>("Mezcla_FechaIngreso")
                        .HasColumnType("date");

                    b.Property<string>("Mezcla_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)");

                    b.Property<int>("Mezcla_NroCapas")
                        .HasColumnType("int");

                    b.Property<int>("Mezcla_PorcentajeCapa1")
                        .HasPrecision(18, 2)
                        .HasColumnType("int");

                    b.Property<int>("Mezcla_PorcentajeCapa2")
                        .HasColumnType("int");

                    b.Property<int>("Mezcla_PorcentajeCapa3")
                        .HasColumnType("int");

                    b.Property<decimal>("Mezcla_PorcentajeMaterial1_Capa1")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Mezcla_PorcentajeMaterial1_Capa2")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Mezcla_PorcentajeMaterial1_Capa3")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Mezcla_PorcentajeMaterial2_Capa1")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Mezcla_PorcentajeMaterial2_Capa2")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Mezcla_PorcentajeMaterial2_Capa3")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Mezcla_PorcentajeMaterial3_Capa1")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Mezcla_PorcentajeMaterial3_Capa2")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Mezcla_PorcentajeMaterial3_Capa3")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Mezcla_PorcentajeMaterial4_Capa1")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Mezcla_PorcentajeMaterial4_Capa2")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Mezcla_PorcentajeMaterial4_Capa3")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Mezcla_PorcentajePigmto1_Capa1")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Mezcla_PorcentajePigmto1_Capa2")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Mezcla_PorcentajePigmto1_Capa3")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Mezcla_PorcentajePigmto2_Capa1")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Mezcla_PorcentajePigmto2_Capa2")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Mezcla_PorcentajePigmto2_Capa3")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("Usua_Id")
                        .HasColumnType("bigint");

                    b.HasKey("Mezcla_Id");

                    b.HasIndex("Material_Id");

                    b.HasIndex("MezMaterial_Id1xCapa1");

                    b.HasIndex("MezMaterial_Id1xCapa2");

                    b.HasIndex("MezMaterial_Id1xCapa3");

                    b.HasIndex("MezMaterial_Id2xCapa1");

                    b.HasIndex("MezMaterial_Id2xCapa2");

                    b.HasIndex("MezMaterial_Id2xCapa3");

                    b.HasIndex("MezMaterial_Id3xCapa1");

                    b.HasIndex("MezMaterial_Id3xCapa2");

                    b.HasIndex("MezMaterial_Id3xCapa3");

                    b.HasIndex("MezMaterial_Id4xCapa1");

                    b.HasIndex("MezMaterial_Id4xCapa2");

                    b.HasIndex("MezMaterial_Id4xCapa3");

                    b.HasIndex("MezPigmto_Id1xCapa1");

                    b.HasIndex("MezPigmto_Id1xCapa2");

                    b.HasIndex("MezPigmto_Id1xCapa3");

                    b.HasIndex("MezPigmto_Id2xCapa1");

                    b.HasIndex("MezPigmto_Id2xCapa2");

                    b.HasIndex("MezPigmto_Id2xCapa3");

                    b.HasIndex("Usua_Id");

                    b.ToTable("Mezclas");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Mezcla_Material", b =>
                {
                    b.Property<int>("MezMaterial_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MezMaterial_Id"), 1L, 1);

                    b.Property<string>("MezMaterial_Descripcion")
                        .HasColumnType("text");

                    b.Property<string>("MezMaterial_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.HasKey("MezMaterial_Id");

                    b.ToTable("Mezclas_Materiales");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Mezcla_Pigmento", b =>
                {
                    b.Property<int>("MezPigmto_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MezPigmto_Id"), 1L, 1);

                    b.Property<string>("MezPigmto_Descripcion")
                        .HasColumnType("text");

                    b.Property<string>("MezPigmto_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.HasKey("MezPigmto_Id");

                    b.ToTable("Mezclas_Pigmentos");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Orden_Compra", b =>
                {
                    b.Property<long>("Oc_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Oc_Id"), 1L, 1);

                    b.Property<int>("Estado_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Oc_Fecha")
                        .HasColumnType("date");

                    b.Property<string>("Oc_Hora")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Oc_Observacion")
                        .HasColumnType("text");

                    b.Property<decimal>("Oc_ValorTotal")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("Prov_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("TpDoc_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<long>("Usua_Id")
                        .HasColumnType("bigint");

                    b.HasKey("Oc_Id");

                    b.HasIndex("Estado_Id");

                    b.HasIndex("Prov_Id");

                    b.HasIndex("TpDoc_Id");

                    b.HasIndex("Usua_Id");

                    b.ToTable("Ordenes_Compras");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Orden_Trabajo", b =>
                {
                    b.Property<long>("Ot_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Ot_Id"), 1L, 1);

                    b.Property<int>("Estado_Id")
                        .HasColumnType("int");

                    b.Property<long>("Mezcla_Id")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Ot_CantidadKilos")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("Ot_CantidadKilos_Margen")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("Ot_CantidadUnidades")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("Ot_CantidadUnidades_Margen")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<string>("Ot_Corte")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Ot_Cyrel")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime>("Ot_FechaCreacion")
                        .HasColumnType("Date");

                    b.Property<decimal>("Ot_MargenAdicional")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<string>("Ot_Observacion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("PedExt_Id")
                        .HasColumnType("bigint");

                    b.Property<int>("Prod_Id")
                        .HasColumnType("int");

                    b.Property<long>("SedeCli_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<long>("Usua_Id")
                        .HasColumnType("bigint");

                    b.HasKey("Ot_Id");

                    b.HasIndex("Estado_Id");

                    b.HasIndex("Mezcla_Id");

                    b.HasIndex("PedExt_Id");

                    b.HasIndex("Prod_Id");

                    b.HasIndex("SedeCli_Id");

                    b.HasIndex("UndMed_Id");

                    b.HasIndex("Usua_Id");

                    b.ToTable("Orden_Trabajo");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.OT_Extrusion", b =>
                {
                    b.Property<int>("Extrusion_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Extrusion_Id"), 1L, 1);

                    b.Property<decimal>("Extrusion_Ancho1")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("Extrusion_Ancho2")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("Extrusion_Ancho3")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("Extrusion_Calibre")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<long>("Formato_Id")
                        .HasColumnType("bigint");

                    b.Property<int>("Material_Id")
                        .HasColumnType("int");

                    b.Property<long>("Ot_Id")
                        .HasColumnType("bigint");

                    b.Property<int>("Pigmt_Id")
                        .HasColumnType("int");

                    b.Property<int>("Tratado_Id")
                        .HasPrecision(14, 2)
                        .HasColumnType("int");

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("Extrusion_Id");

                    b.HasIndex("Formato_Id");

                    b.HasIndex("Material_Id");

                    b.HasIndex("Ot_Id");

                    b.HasIndex("Pigmt_Id");

                    b.HasIndex("Tratado_Id");

                    b.HasIndex("UndMed_Id");

                    b.ToTable("OT_Extrusion");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.OT_Impresion", b =>
                {
                    b.Property<int>("Impresion_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Impresion_Id"), 1L, 1);

                    b.Property<long>("Ot_Id")
                        .HasColumnType("bigint");

                    b.Property<int>("Pista_Id")
                        .HasColumnType("int");

                    b.Property<int>("Rodillo_Id")
                        .HasColumnType("int");

                    b.Property<long>("Tinta1_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("Tinta2_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("Tinta3_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("Tinta4_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("Tinta5_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("Tinta6_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("Tinta7_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("Tinta8_Id")
                        .HasColumnType("bigint");

                    b.Property<int>("TpImpresion_Id")
                        .HasColumnType("int");

                    b.HasKey("Impresion_Id");

                    b.HasIndex("Ot_Id");

                    b.HasIndex("Tinta1_Id");

                    b.HasIndex("Tinta2_Id");

                    b.HasIndex("Tinta3_Id");

                    b.HasIndex("Tinta4_Id");

                    b.HasIndex("Tinta5_Id");

                    b.HasIndex("Tinta6_Id");

                    b.HasIndex("Tinta7_Id");

                    b.HasIndex("Tinta8_Id");

                    b.HasIndex("TpImpresion_Id");

                    b.ToTable("OT_Impresion");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.OT_Laminado", b =>
                {
                    b.Property<int>("LamCapa_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LamCapa_Id"), 1L, 1);

                    b.Property<int>("Capa_Id1")
                        .HasColumnType("int");

                    b.Property<int>("Capa_Id2")
                        .HasColumnType("int");

                    b.Property<int>("Capa_Id3")
                        .HasColumnType("int");

                    b.Property<double>("LamCapa_Calibre1")
                        .HasPrecision(14, 2)
                        .HasColumnType("float(14)");

                    b.Property<double>("LamCapa_Calibre2")
                        .HasPrecision(14, 2)
                        .HasColumnType("float(14)");

                    b.Property<double>("LamCapa_Calibre3")
                        .HasPrecision(14, 2)
                        .HasColumnType("float(14)");

                    b.Property<double>("LamCapa_Cantidad1")
                        .HasPrecision(14, 2)
                        .HasColumnType("float(14)");

                    b.Property<double>("LamCapa_Cantidad2")
                        .HasPrecision(14, 2)
                        .HasColumnType("float(14)");

                    b.Property<double>("LamCapa_Cantidad3")
                        .HasPrecision(14, 2)
                        .HasColumnType("float(14)");

                    b.Property<long>("OT_Id")
                        .HasColumnType("bigint");

                    b.HasKey("LamCapa_Id");

                    b.HasIndex("Capa_Id1");

                    b.HasIndex("Capa_Id2");

                    b.HasIndex("Capa_Id3");

                    b.HasIndex("OT_Id");

                    b.ToTable("OT_Laminado");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.PedidoExterno", b =>
                {
                    b.Property<long>("PedExt_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("PedExt_Id"), 1L, 1);

                    b.Property<long>("Empresa_Id")
                        .HasColumnType("bigint");

                    b.Property<int>("Estado_Id")
                        .HasColumnType("int");

                    b.Property<byte[]>("PedExt_Archivo")
                        .IsRequired()
                        .HasColumnType("binary(4)");

                    b.Property<long>("PedExt_Codigo")
                        .HasColumnType("bigint");

                    b.Property<int?>("PedExt_Descuento")
                        .HasPrecision(18, 2)
                        .HasColumnType("int");

                    b.Property<DateTime>("PedExt_FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PedExt_FechaEntrega")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("PedExt_Iva")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PedExt_Observacion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("PedExt_PrecioTotal")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PedExt_PrecioTotalFinal")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("SedeCli_Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("Usua_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(6);

                    b.HasKey("PedExt_Id");

                    b.HasIndex("Empresa_Id");

                    b.HasIndex("Estado_Id");

                    b.HasIndex("SedeCli_Id");

                    b.HasIndex("Usua_Id");

                    b.ToTable("Pedidos_Externos");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.PedidoProducto", b =>
                {
                    b.Property<int>("Prod_Id")
                        .HasColumnType("int");

                    b.Property<long>("PedExt_Id")
                        .HasColumnType("bigint");

                    b.Property<decimal>("PedExtProd_Cantidad")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal?>("PedExtProd_PrecioUnitario")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("Prod_Id", "PedExt_Id");

                    b.HasIndex("PedExt_Id");

                    b.HasIndex("UndMed_Id");

                    b.ToTable("PedidosExternos_Productos");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Pigmento", b =>
                {
                    b.Property<int>("Pigmt_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Pigmt_Id"), 1L, 1);

                    b.Property<string>("Pigmt_Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("Pigmt_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Pigmt_Id");

                    b.ToTable("Pigmentos");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Pistas", b =>
                {
                    b.Property<int>("Pista_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Pista_Id"), 1L, 1);

                    b.Property<string>("Pista_Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Pista_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Pista_Id");

                    b.ToTable("Pistas");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.PreEntrega_RolloDespacho", b =>
                {
                    b.Property<long>("PreEntRollo_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("PreEntRollo_Id"), 1L, 1);

                    b.Property<DateTime>("PreEntRollo_Fecha")
                        .HasColumnType("date");

                    b.Property<string>("PreEntRollo_Observacion")
                        .HasColumnType("text");

                    b.Property<long>("Usua_Id")
                        .HasColumnType("bigint");

                    b.HasKey("PreEntRollo_Id");

                    b.HasIndex("Usua_Id");

                    b.ToTable("PreEntrega_RollosDespacho");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Proceso", b =>
                {
                    b.Property<string>("Proceso_Id")
                        .HasColumnType("varchar(10)");

                    b.Property<int>("Proceso_Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Proceso_Codigo"), 1L, 1);

                    b.Property<string>("Proceso_Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Proceso_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Proceso_Id");

                    b.ToTable("Procesos");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Producto", b =>
                {
                    b.Property<int>("Prod_Id")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<int?>("Estado_Id")
                        .HasColumnType("int")
                        .HasColumnOrder(14);

                    b.Property<int?>("Material_Id")
                        .HasColumnType("int")
                        .HasColumnOrder(16);

                    b.Property<int?>("Pigmt_Id")
                        .HasColumnType("int")
                        .HasColumnOrder(15);

                    b.Property<decimal?>("Prod_Ancho")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)")
                        .HasColumnOrder(9);

                    b.Property<decimal?>("Prod_Calibre")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)")
                        .HasColumnOrder(11);

                    b.Property<int?>("Prod_CantBolsasBulto")
                        .HasPrecision(14, 2)
                        .HasColumnType("int");

                    b.Property<int?>("Prod_CantBolsasPaquete")
                        .HasPrecision(14, 2)
                        .HasColumnType("int");

                    b.Property<int>("Prod_Cod")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Prod_Cod"), 1L, 1);

                    b.Property<string>("Prod_Descripcion")
                        .HasColumnType("text")
                        .HasColumnOrder(3);

                    b.Property<decimal?>("Prod_Fuelle")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)")
                        .HasColumnOrder(8);

                    b.Property<decimal?>("Prod_Largo")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)")
                        .HasColumnOrder(10);

                    b.Property<string>("Prod_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnOrder(2);

                    b.Property<decimal>("Prod_Peso")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)")
                        .HasColumnOrder(6);

                    b.Property<decimal>("Prod_Peso_Millar")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)")
                        .HasColumnOrder(5);

                    b.Property<int>("TpProd_Id")
                        .HasColumnType("int")
                        .HasColumnOrder(4);

                    b.Property<int?>("TpSellado_Id")
                        .HasColumnType("int");

                    b.Property<string>("UndMedACF")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnOrder(12);

                    b.Property<string>("UndMedPeso")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnOrder(7);

                    b.HasKey("Prod_Id");

                    b.HasIndex("Estado_Id");

                    b.HasIndex("Material_Id");

                    b.HasIndex("Pigmt_Id");

                    b.HasIndex("TpProd_Id");

                    b.HasIndex("TpSellado_Id");

                    b.HasIndex("UndMedACF");

                    b.HasIndex("UndMedPeso");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Provedor_MateriaPrima", b =>
                {
                    b.Property<long>("Prov_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("MatPri_Id")
                        .HasColumnType("bigint");

                    b.HasKey("Prov_Id", "MatPri_Id");

                    b.HasIndex("MatPri_Id");

                    b.ToTable("Proveedores_MateriasPrimas");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Proveedor", b =>
                {
                    b.Property<long>("Prov_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Prov_Ciudad")
                        .HasColumnType("varchar(100)");

                    b.Property<long>("Prov_Codigo")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Prov_Codigo"), 1L, 1);

                    b.Property<string>("Prov_Email")
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("Prov_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("Prov_Telefono")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("TipoIdentificacion_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<int>("TpProv_Id")
                        .HasColumnType("int");

                    b.HasKey("Prov_Id");

                    b.HasIndex("TipoIdentificacion_Id");

                    b.HasIndex("TpProv_Id");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Recuperado_MatPrima", b =>
                {
                    b.Property<long>("RecMp_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("RecMp_Id"), 1L, 1);

                    b.Property<string>("Proc_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime>("RecMp_FechaIngreso")
                        .HasColumnType("date");

                    b.Property<string>("RecMp_Observacion")
                        .HasColumnType("text");

                    b.Property<long>("Usua_Id")
                        .HasColumnType("bigint");

                    b.HasKey("RecMp_Id");

                    b.HasIndex("Proc_Id");

                    b.HasIndex("Usua_Id");

                    b.ToTable("Recuperados_MatPrima");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Remision", b =>
                {
                    b.Property<int>("Rem_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Rem_Id"), 1L, 1);

                    b.Property<int>("Estado_Id")
                        .HasColumnType("int");

                    b.Property<long>("Prov_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Rem_Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("Rem_Fecha")
                        .HasColumnType("Date");

                    b.Property<string>("Rem_Observacion")
                        .HasColumnType("text");

                    b.Property<decimal?>("Rem_PrecioEstimado")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TpDoc_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<long>("Usua_Id")
                        .HasColumnType("bigint");

                    b.HasKey("Rem_Id");

                    b.HasIndex("Estado_Id");

                    b.HasIndex("Prov_Id");

                    b.HasIndex("TpDoc_Id");

                    b.HasIndex("Usua_Id");

                    b.ToTable("Remisiones");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Remision_FacturaCompra", b =>
                {
                    b.Property<long>("Facco_Id")
                        .HasColumnType("bigint");

                    b.Property<int>("Rem_Id")
                        .HasColumnType("int");

                    b.HasKey("Facco_Id", "Rem_Id");

                    b.HasIndex("Rem_Id");

                    b.ToTable("Remisiones_FacturasCompras");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Remision_MateriaPrima", b =>
                {
                    b.Property<long>("RemiMatPri_Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("RemiMatPri_Codigo"), 1L, 1);

                    b.Property<long>("MatPri_Id")
                        .HasColumnType("bigint");

                    b.Property<int>("Rem_Id")
                        .HasColumnType("int");

                    b.Property<decimal>("RemiMatPri_Cantidad")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal?>("RemiMatPri_ValorUnitario")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("Tinta_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("RemiMatPri_Codigo");

                    b.HasIndex("MatPri_Id");

                    b.HasIndex("Rem_Id");

                    b.HasIndex("Tinta_Id");

                    b.HasIndex("UndMed_Id");

                    b.ToTable("Remisiones_MateriasPrimas");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Rodillos", b =>
                {
                    b.Property<int>("Rodillo_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Rodillo_Id"), 1L, 1);

                    b.Property<string>("Rodillo_Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Rodillo_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Rodillo_Id");

                    b.ToTable("Rodillos");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Rol_Usuario", b =>
                {
                    b.Property<int>("RolUsu_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RolUsu_Id"), 1L, 1);

                    b.Property<string>("RolUsu_Descripcion")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("RolUsu_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("RolUsu_Id");

                    b.ToTable("Roles_Usuarios");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.SedesClientes", b =>
                {
                    b.Property<long>("SedeCli_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("Cli_Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("SedeCli_CodPostal")
                        .HasColumnType("bigint");

                    b.Property<int>("SedeCli_Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SedeCli_Codigo"), 1L, 1);

                    b.Property<string>("SedeCliente_Ciudad")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("SedeCliente_Direccion")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)");

                    b.HasKey("SedeCli_Id");

                    b.HasIndex("Cli_Id");

                    b.ToTable("Sedes_Clientes");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Tinta", b =>
                {
                    b.Property<long>("Tinta_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Tinta_Id"), 1L, 1);

                    b.Property<int>("CatMP_Id")
                        .HasColumnType("int");

                    b.Property<string>("Tinta_CodigoHexadecimal")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Tinta_Descripcion")
                        .HasColumnType("varchar(MAX)");

                    b.Property<decimal>("Tinta_InvInicial")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<string>("Tinta_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)");

                    b.Property<decimal>("Tinta_Precio")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Tinta_Stock")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TpBod_Id")
                        .HasColumnType("int");

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("Tinta_Id");

                    b.HasIndex("CatMP_Id");

                    b.HasIndex("TpBod_Id");

                    b.HasIndex("UndMed_Id");

                    b.ToTable("Tintas");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Tinta_MateriaPrima", b =>
                {
                    b.Property<long>("Tinta_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("MatPri_Id")
                        .HasColumnType("bigint");

                    b.HasKey("Tinta_Id", "MatPri_Id");

                    b.HasIndex("MatPri_Id");

                    b.ToTable("Tintas_MateriasPrimas");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Tipo_Bodega", b =>
                {
                    b.Property<int>("TpBod_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TpBod_Id"), 1L, 1);

                    b.Property<long>("Area_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("TpBod_Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TpBod_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("TpBod_Id");

                    b.HasIndex("Area_Id");

                    b.ToTable("Tipos_Bodegas");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Tipo_Documento", b =>
                {
                    b.Property<string>("TpDoc_Id")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("TpDoc_Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TpDoc_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("TpDoc_Id");

                    b.ToTable("Tipos_Documentos");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Tipo_Estado", b =>
                {
                    b.Property<int>("TpEstado_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TpEstado_Id"), 1L, 1);

                    b.Property<string>("TpEstado_Descripcion")
                        .HasColumnType("text");

                    b.Property<string>("TpEstado_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("TpEstado_Id");

                    b.ToTable("Tipos_Estados");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Tipo_FallaTecnica", b =>
                {
                    b.Property<int>("TipoFalla_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoFalla_Id"), 1L, 1);

                    b.Property<string>("TipoFalla_Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("TipoFalla_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("TipoFalla_Id");

                    b.ToTable("Tipos_FallasTecnicas");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Tipo_Moneda", b =>
                {
                    b.Property<string>("TpMoneda_Id")
                        .HasColumnType("varchar(50)");

                    b.Property<int>("TpMoneda_Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TpMoneda_Codigo"), 1L, 1);

                    b.Property<string>("TpMoneda_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("TpMoneda_Id");

                    b.ToTable("Tipos_Monedas");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Tipo_Producto", b =>
                {
                    b.Property<int>("TpProd_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TpProd_Id"), 1L, 1);

                    b.Property<string>("TpProd_Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TpProd_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("TpProd_Id");

                    b.ToTable("Tipos_Productos");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Tipo_Proveedor", b =>
                {
                    b.Property<int>("TpProv_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TpProv_Id"), 1L, 1);

                    b.Property<string>("TpProv_Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("TpProv_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)");

                    b.HasKey("TpProv_Id");

                    b.ToTable("Tipos_Proveedores");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Tipo_Recuperado", b =>
                {
                    b.Property<string>("TpRecu_Id")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("TpRecu_Descripcion")
                        .HasColumnType("text");

                    b.Property<string>("TpRecu_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("TpRecu_Id");

                    b.ToTable("Tipos_Recuperados");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Tipo_Usuario", b =>
                {
                    b.Property<int>("tpUsu_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("tpUsu_Id"), 1L, 1);

                    b.Property<string>("tpUsu_Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("tpUsu_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("tpUsu_Id");

                    b.ToTable("Tipos_Usuarios");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.TipoDevolucion_ProductoFacturado", b =>
                {
                    b.Property<int>("TipoDevProdFact_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoDevProdFact_Id"), 1L, 1);

                    b.Property<string>("TipoDevProdFact_Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TipoDevProdFact_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("TipoDevProdFact_Id");

                    b.ToTable("TiposDevoluciones_ProductosFacturados");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.TipoIdentificacion", b =>
                {
                    b.Property<string>("TipoIdentificacion_Id")
                        .HasColumnType("varchar(10)");

                    b.Property<int>("TipoIdentificacion_Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoIdentificacion_Codigo"), 1L, 1);

                    b.Property<string>("TipoIdentificacion_Descripcion")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("TipoIdentificacion_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("TipoIdentificacion_Id");

                    b.ToTable("TipoIdentificaciones");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Tipos_Impresion", b =>
                {
                    b.Property<int>("TpImpresion_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TpImpresion_Id"), 1L, 1);

                    b.Property<string>("TpImpresion_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Tp_Impresion_Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("TpImpresion_Id");

                    b.ToTable("Tipos_Impresion");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Tipos_Sellados", b =>
                {
                    b.Property<int>("TpSellado_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TpSellado_Id"), 1L, 1);

                    b.Property<string>("TpSellado_Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TpSellados_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("TpSellado_Id");

                    b.ToTable("Tipos_Sellados");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.TiposClientes", b =>
                {
                    b.Property<int>("TPCli_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TPCli_Id"), 1L, 1);

                    b.Property<string>("TPCli_Descripcion")
                        .HasColumnType("text");

                    b.Property<string>("TPCli_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("TPCli_Id");

                    b.ToTable("Tipos_Clientes");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Tratado", b =>
                {
                    b.Property<int>("Tratado_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Tratado_Id"), 1L, 1);

                    b.Property<string>("Tratado_Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Tratado_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Tratado_Id");

                    b.ToTable("Tratado");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Unidad_Medida", b =>
                {
                    b.Property<string>("UndMed_Id")
                        .HasColumnType("varchar(10)");

                    b.Property<int>("UndMed_Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UndMed_Codigo"), 1L, 1);

                    b.Property<string>("UndMed_Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UndMed_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("UndMed_Id");

                    b.ToTable("Unidades_Medidas");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Usuario", b =>
                {
                    b.Property<long>("Usua_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("Area_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("Empresa_Id")
                        .HasColumnType("bigint");

                    b.Property<int>("Estado_Id")
                        .HasColumnType("int");

                    b.Property<int>("RolUsu_Id")
                        .HasColumnType("int");

                    b.Property<string>("TipoIdentificacion_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<int>("Usua_Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Usua_Codigo"), 1L, 1);

                    b.Property<string>("Usua_Contrasena")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Usua_Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Usua_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Usua_Telefono")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<long>("cajComp_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("eps_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("fPen_Id")
                        .HasColumnType("bigint");

                    b.Property<int>("tpUsu_Id")
                        .HasColumnType("int");

                    b.HasKey("Usua_Id");

                    b.HasIndex("Area_Id");

                    b.HasIndex("Empresa_Id");

                    b.HasIndex("Estado_Id");

                    b.HasIndex("RolUsu_Id");

                    b.HasIndex("TipoIdentificacion_Id");

                    b.HasIndex("cajComp_Id");

                    b.HasIndex("eps_Id");

                    b.HasIndex("fPen_Id");

                    b.HasIndex("tpUsu_Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Archivos", b =>
                {
                    b.HasOne("PlasticaribeApi_Prueba.Models.Categorias_Archivos", "Categoria")
                        .WithMany()
                        .HasForeignKey("Categoria_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Asignacion_BOPP", b =>
                {
                    b.HasOne("PlasticaribeApi_Prueba.Models.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("Estado_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Usuario", "Usua")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Estado");

                    b.Navigation("Usua");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Asignacion_MatPrima", b =>
                {
                    b.HasOne("PlasticaribeApi_Prueba.Models.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("Estado_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Estado", "EstadoOT")
                        .WithMany()
                        .HasForeignKey("Estado_OrdenTrabajo")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PlasticaribeApi_Prueba.Models.Usuario", "Usua")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Estado");

                    b.Navigation("EstadoOT");

                    b.Navigation("Usua");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Asignacion_MatPrimaXTinta", b =>
                {
                    b.HasOne("PlasticaribeApi_Prueba.Models.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("Estado_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Tinta", "Tinta")
                        .WithMany()
                        .HasForeignKey("Tinta_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Unidad_Medida", "UndMed")
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Usuario", "Usua")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Estado");

                    b.Navigation("Tinta");

                    b.Navigation("UndMed");

                    b.Navigation("Usua");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.AsignacionProducto_FacturaVenta", b =>
                {
                    b.HasOne("PlasticaribeApi_Prueba.Models.Clientes", "Cliente")
                        .WithMany()
                        .HasForeignKey("Cli_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("Usua_Conductor")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Usuario", "Usua")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Usua");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.BOPP", b =>
                {
                    b.HasOne("PlasticaribeApi_Prueba.Models.Categoria_MatPrima", "CatMP")
                        .WithMany()
                        .HasForeignKey("CatMP_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Tipo_Bodega", "TpBod")
                        .WithMany()
                        .HasForeignKey("TpBod_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Unidad_Medida", "UndMed")
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Unidad_Medida", "UndMed2")
                        .WithMany()
                        .HasForeignKey("UndMed_Kg")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Usuario", "Usua")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CatMP");

                    b.Navigation("TpBod");

                    b.Navigation("UndMed");

                    b.Navigation("UndMed2");

                    b.Navigation("Usua");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.cajaCompensacion", b =>
                {
                    b.HasOne("PlasticaribeApi_Prueba.Models.TipoIdentificacion", "TipoIdentificacion")
                        .WithMany()
                        .HasForeignKey("TipoIdentificacion_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TipoIdentificacion");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Cliente_Producto", b =>
                {
                    b.HasOne("PlasticaribeApi_Prueba.Models.Clientes", "Cli")
                        .WithMany("CliProd")
                        .HasForeignKey("Cli_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Producto", "Prod")
                        .WithMany("CliProd")
                        .HasForeignKey("Prod_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cli");

                    b.Navigation("Prod");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Clientes", b =>
                {
                    b.HasOne("PlasticaribeApi_Prueba.Models.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("Estado_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PlasticaribeApi_Prueba.Models.TiposClientes", "TPCli")
                        .WithMany()
                        .HasForeignKey("TPCli_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.TipoIdentificacion", "TipoIdentificacion")
                        .WithMany()
                        .HasForeignKey("TipoIdentificacion_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Usuario", "Usua")
                        .WithMany()
                        .HasForeignKey("usua_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Estado");

                    b.Navigation("TPCli");

                    b.Navigation("TipoIdentificacion");

                    b.Navigation("Usua");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Detalle_OrdenCompra", b =>
                {
                    b.HasOne("PlasticaribeApi_Prueba.Models.BOPP", "BOPP")
                        .WithMany()
                        .HasForeignKey("BOPP_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Materia_Prima", "MatPrima")
                        .WithMany()
                        .HasForeignKey("MatPri_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Orden_Compra", "Orden_Compra")
                        .WithMany()
                        .HasForeignKey("Oc_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Tinta", "Tinta")
                        .WithMany()
                        .HasForeignKey("Tinta_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Unidad_Medida", "UndMed")
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BOPP");

                    b.Navigation("MatPrima");

                    b.Navigation("Orden_Compra");

                    b.Navigation("Tinta");

                    b.Navigation("UndMed");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.DetalleAsignacion_BOPP", b =>
                {
                    b.HasOne("PlasticaribeApi_Prueba.Models.Asignacion_BOPP", "AsigBOPP")
                        .WithMany("DetAsigBOPP")
                        .HasForeignKey("AsigBOPP_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.BOPP", "BOPP")
                        .WithMany("DetAsigBOPP")
                        .HasForeignKey("BOPP_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Estado", "EstadoOT")
                        .WithMany()
                        .HasForeignKey("Estado_OrdenTrabajo")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PlasticaribeApi_Prueba.Models.Proceso", "Proceso")
                        .WithMany()
                        .HasForeignKey("Proceso_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Tipo_Documento", "Tipo_Documento")
                        .WithMany()
                        .HasForeignKey("TpDoc_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Unidad_Medida", "UndMed")
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AsigBOPP");

                    b.Navigation("BOPP");

                    b.Navigation("EstadoOT");

                    b.Navigation("Proceso");

                    b.Navigation("Tipo_Documento");

                    b.Navigation("UndMed");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.DetalleAsignacion_MateriaPrima", b =>
                {
                    b.HasOne("PlasticaribeApi_Prueba.Models.Asignacion_MatPrima", "AsigMp")
                        .WithMany("DtAsigMatPri")
                        .HasForeignKey("AsigMp_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Materia_Prima", "MatPri")
                        .WithMany("DtAsigMatPri")
                        .HasForeignKey("MatPri_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Proceso", "Proceso")
                        .WithMany()
                        .HasForeignKey("Proceso_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Unidad_Medida", "UndMed")
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AsigMp");

                    b.Navigation("MatPri");

                    b.Navigation("Proceso");

                    b.Navigation("UndMed");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.DetalleAsignacion_MatPrimaXTinta", b =>
                {
                    b.HasOne("PlasticaribeApi_Prueba.Models.Asignacion_MatPrimaXTinta", "AsigMPxTinta")
                        .WithMany("DetAsigMPxTinta")
                        .HasForeignKey("AsigMPxTinta_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Materia_Prima", "MatPri")
                        .WithMany("DetAsigMPxTinta")
                        .HasForeignKey("MatPri_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Proceso", "Proceso")
                        .WithMany()
                        .HasForeignKey("Proceso_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Unidad_Medida", "UndMed")
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AsigMPxTinta");

                    b.Navigation("MatPri");

                    b.Navigation("Proceso");

                    b.Navigation("UndMed");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.DetalleAsignacion_Tinta", b =>
                {
                    b.HasOne("PlasticaribeApi_Prueba.Models.Asignacion_MatPrima", "AsigMp")
                        .WithMany("DetAsigTinta")
                        .HasForeignKey("AsigMp_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Proceso", "Proceso")
                        .WithMany()
                        .HasForeignKey("Proceso_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Tinta", "Tinta")
                        .WithMany("DetAsigTinta")
                        .HasForeignKey("Tinta_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Unidad_Medida", "UndMed")
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AsigMp");

                    b.Navigation("Proceso");

                    b.Navigation("Tinta");

                    b.Navigation("UndMed");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.DetalleDevolucion_MateriaPrima", b =>
                {
                    b.HasOne("PlasticaribeApi_Prueba.Models.Devolucion_MatPrima", "DevMatPri")
                        .WithMany("DetDevMatPri")
                        .HasForeignKey("DevMatPri_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Materia_Prima", "MatPri")
                        .WithMany("DetDevMatPri")
                        .HasForeignKey("MatPri_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Proceso", "Proceso")
                        .WithMany()
                        .HasForeignKey("Proceso_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Unidad_Medida", "UndMed")
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DevMatPri");

                    b.Navigation("MatPri");

                    b.Navigation("Proceso");

                    b.Navigation("UndMed");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.DetalleDevolucion_ProductoFacturado", b =>
                {
                    b.HasOne("PlasticaribeApi_Prueba.Models.Devolucion_ProductoFacturado", "DevolucionProdFact")
                        .WithMany("DtDevProd_Fact")
                        .HasForeignKey("DevProdFact_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Producto", "Prod")
                        .WithMany("DtDevProd_Fact")
                        .HasForeignKey("Prod_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Unidad_Medida", "UndMedida")
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DevolucionProdFact");

                    b.Navigation("Prod");

                    b.Navigation("UndMedida");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.DetalleEntradaRollo_Producto", b =>
                {
                    b.HasOne("PlasticaribeApi_Prueba.Models.EntradaRollo_Producto", "EntRollo_Producto")
                        .WithMany()
                        .HasForeignKey("EntRolloProd_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("Estado_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Proceso", "Proceso")
                        .WithMany()
                        .HasForeignKey("Proceso_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PlasticaribeApi_Prueba.Models.Producto", "Prod")
                        .WithMany()
                        .HasForeignKey("Prod_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Unidad_Medida", "UndMedida_Prod")
                        .WithMany()
                        .HasForeignKey("UndMed_Prod")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Unidad_Medida", "UndMedida_Rollo")
                        .WithMany()
                        .HasForeignKey("UndMed_Rollo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("EntRollo_Producto");

                    b.Navigation("Estado");

                    b.Navigation("Proceso");

                    b.Navigation("Prod");

                    b.Navigation("UndMedida_Prod");

                    b.Navigation("UndMedida_Rollo");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.DetallePreEntrega_RolloDespacho", b =>
                {
                    b.HasOne("PlasticaribeApi_Prueba.Models.Clientes", "Cliente")
                        .WithMany()
                        .HasForeignKey("Cli_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.PreEntrega_RolloDespacho", "PreEntregaRollo")
                        .WithMany()
                        .HasForeignKey("PreEntRollo_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Proceso", "Proceso")
                        .WithMany()
                        .HasForeignKey("Proceso_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Producto", "Prod")
                        .WithMany()
                        .HasForeignKey("Prod_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Unidad_Medida", "UndMedidaProducto")
                        .WithMany()
                        .HasForeignKey("UndMed_Producto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Unidad_Medida", "UndMedidaRollo")
                        .WithMany()
                        .HasForeignKey("UndMed_Rollo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("PreEntregaRollo");

                    b.Navigation("Proceso");

                    b.Navigation("Prod");

                    b.Navigation("UndMedidaProducto");

                    b.Navigation("UndMedidaRollo");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.DetalleRecuperado_MateriaPrima", b =>
                {
                    b.HasOne("PlasticaribeApi_Prueba.Models.Materia_Prima", "MatPri")
                        .WithMany("DetRecMatPri")
                        .HasForeignKey("MatPri_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Recuperado_MatPrima", "RecMp")
                        .WithMany("DetRecMatPri")
                        .HasForeignKey("RecMp_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Tipo_Recuperado", "TpRecu")
                        .WithMany()
                        .HasForeignKey("TpRecu_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Unidad_Medida", "UndMed")
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MatPri");

                    b.Navigation("RecMp");

                    b.Navigation("TpRecu");

                    b.Navigation("UndMed");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Detalles_EntradaTintas", b =>
                {
                    b.HasOne("PlasticaribeApi_Prueba.Models.Entrada_Tintas", "Entrada_Tinta")
                        .WithMany()
                        .HasForeignKey("EntTinta_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Tinta", "Tintas")
                        .WithMany()
                        .HasForeignKey("Tinta_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Unidad_Medida", "UndMed")
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Entrada_Tinta");

                    b.Navigation("Tintas");

                    b.Navigation("UndMed");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.DetallesAsignacionProducto_FacturaVenta", b =>
                {
                    b.HasOne("PlasticaribeApi_Prueba.Models.AsignacionProducto_FacturaVenta", "AsigProducto_FV")
                        .WithMany("DtAsigProd_FVTA")
                        .HasForeignKey("AsigProdFV_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Producto", "Prod")
                        .WithMany("DtAsigProd_FVTA")
                        .HasForeignKey("Prod_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Unidad_Medida", "UndMedida")
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AsigProducto_FV");

                    b.Navigation("Prod");

                    b.Navigation("UndMedida");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Devolucion_MatPrima", b =>
                {
                    b.HasOne("PlasticaribeApi_Prueba.Models.Usuario", "Usua")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Usua");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Devolucion_ProductoFacturado", b =>
                {
                    b.HasOne("PlasticaribeApi_Prueba.Models.Clientes", "Cliente")
                        .WithMany()
                        .HasForeignKey("Cli_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.TipoDevolucion_ProductoFacturado", "TipoDevolucionPF")
                        .WithMany()
                        .HasForeignKey("TipoDevProdFact_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Usuario", "Usua")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("TipoDevolucionPF");

                    b.Navigation("Usua");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Empresa", b =>
                {
                    b.HasOne("PlasticaribeApi_Prueba.Models.TipoIdentificacion", "TipoIdentificacion")
                        .WithMany()
                        .HasForeignKey("TipoIdentificacion_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TipoIdentificacion");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Entrada_Tintas", b =>
                {
                    b.HasOne("PlasticaribeApi_Prueba.Models.Usuario", "Usua")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Usua");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.EntradaRollo_Producto", b =>
                {
                    b.HasOne("PlasticaribeApi_Prueba.Models.Usuario", "Usua")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Usua");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.EPS", b =>
                {
                    b.HasOne("PlasticaribeApi_Prueba.Models.TipoIdentificacion", "TipoIdentificacion")
                        .WithMany()
                        .HasForeignKey("TipoIdentificacion_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TipoIdentificacion");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Estado", b =>
                {
                    b.HasOne("PlasticaribeApi_Prueba.Models.Tipo_Estado", null)
                        .WithMany()
                        .HasForeignKey("TpEstado_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Estados_ProcesosOT", b =>
                {
                    b.HasOne("PlasticaribeApi_Prueba.Models.Estado", "Estado_OT")
                        .WithMany()
                        .HasForeignKey("Estado_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Falla_Tecnica", "FallaTecnica")
                        .WithMany()
                        .HasForeignKey("Falla_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Unidad_Medida", "UnidadMedida")
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Estado_OT");

                    b.Navigation("FallaTecnica");

                    b.Navigation("UnidadMedida");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Existencia_Productos", b =>
                {
                    b.HasOne("PlasticaribeApi_Prueba.Models.Producto", "Prod")
                        .WithMany()
                        .HasForeignKey("Prod_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Tipo_Bodega", "TpBod")
                        .WithMany()
                        .HasForeignKey("TpBod_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Tipo_Moneda", "TpMoneda")
                        .WithMany()
                        .HasForeignKey("TpMoneda_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Unidad_Medida", "UndMed")
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Prod");

                    b.Navigation("TpBod");

                    b.Navigation("TpMoneda");

                    b.Navigation("UndMed");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Factura_Compra", b =>
                {
                    b.HasOne("PlasticaribeApi_Prueba.Models.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("Estado_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Proveedor", "Prov")
                        .WithMany()
                        .HasForeignKey("Prov_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Tipo_Documento", "TpDoc")
                        .WithMany()
                        .HasForeignKey("TpDoc_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PlasticaribeApi_Prueba.Models.Usuario", "Usua")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Estado");

                    b.Navigation("Prov");

                    b.Navigation("TpDoc");

                    b.Navigation("Usua");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.FacturaCompra_MateriaPrima", b =>
                {
                    b.HasOne("PlasticaribeApi_Prueba.Models.Factura_Compra", "Facco")
                        .WithMany()
                        .HasForeignKey("Facco_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Materia_Prima", "MatPri")
                        .WithMany()
                        .HasForeignKey("MatPri_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Tinta", "Tinta")
                        .WithMany()
                        .HasForeignKey("Tinta_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Unidad_Medida", "UndMed")
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Facco");

                    b.Navigation("MatPri");

                    b.Navigation("Tinta");

                    b.Navigation("UndMed");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Falla_Tecnica", b =>
                {
                    b.HasOne("PlasticaribeApi_Prueba.Models.Tipo_FallaTecnica", "TipoFallaTecnica")
                        .WithMany()
                        .HasForeignKey("TipoFalla_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TipoFallaTecnica");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.fondoPension", b =>
                {
                    b.HasOne("PlasticaribeApi_Prueba.Models.TipoIdentificacion", "TipoIdentificacion")
                        .WithMany()
                        .HasForeignKey("TipoIdentificacion_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TipoIdentificacion");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Insumo", b =>
                {
                    b.HasOne("PlasticaribeApi_Prueba.Models.Categoria_Insumo", null)
                        .WithMany()
                        .HasForeignKey("CatInsu_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Unidad_Medida", null)
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.InventarioInicialXDia_MatPrima", b =>
                {
                    b.HasOne("PlasticaribeApi_Prueba.Models.Unidad_Medida", "UndMed")
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("UndMed");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Materia_Prima", b =>
                {
                    b.HasOne("PlasticaribeApi_Prueba.Models.Categoria_MatPrima", "CatMP")
                        .WithMany()
                        .HasForeignKey("CatMP_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Tipo_Bodega", "TpBod")
                        .WithMany()
                        .HasForeignKey("TpBod_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Unidad_Medida", "UndMed")
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CatMP");

                    b.Navigation("TpBod");

                    b.Navigation("UndMed");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Mezcla", b =>
                {
                    b.HasOne("PlasticaribeApi_Prueba.Models.Material_MatPrima", "MaterialMP")
                        .WithMany()
                        .HasForeignKey("Material_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Mezcla_Material", "MezMaterial_MP1C1")
                        .WithMany()
                        .HasForeignKey("MezMaterial_Id1xCapa1")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Mezcla_Material", "MezMaterial_MP1C2")
                        .WithMany()
                        .HasForeignKey("MezMaterial_Id1xCapa2")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Mezcla_Material", "MezMaterial_MP1C3")
                        .WithMany()
                        .HasForeignKey("MezMaterial_Id1xCapa3")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Mezcla_Material", "MezMaterial_MP2C1")
                        .WithMany()
                        .HasForeignKey("MezMaterial_Id2xCapa1")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Mezcla_Material", "MezMaterial_MP2C2")
                        .WithMany()
                        .HasForeignKey("MezMaterial_Id2xCapa2")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Mezcla_Material", "MezMaterial_MP2C3")
                        .WithMany()
                        .HasForeignKey("MezMaterial_Id2xCapa3")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Mezcla_Material", "MezMaterial_MP3C1")
                        .WithMany()
                        .HasForeignKey("MezMaterial_Id3xCapa1")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Mezcla_Material", "MezMaterial_MP3C2")
                        .WithMany()
                        .HasForeignKey("MezMaterial_Id3xCapa2")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Mezcla_Material", "MezMaterial_MP3C3")
                        .WithMany()
                        .HasForeignKey("MezMaterial_Id3xCapa3")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Mezcla_Material", "MezMaterial_MP4C1")
                        .WithMany()
                        .HasForeignKey("MezMaterial_Id4xCapa1")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Mezcla_Material", "MezMaterial_MP4C2")
                        .WithMany()
                        .HasForeignKey("MezMaterial_Id4xCapa2")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Mezcla_Material", "MezMaterial_MP4C3")
                        .WithMany()
                        .HasForeignKey("MezMaterial_Id4xCapa3")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Mezcla_Pigmento", "MezPigmento1C1")
                        .WithMany()
                        .HasForeignKey("MezPigmto_Id1xCapa1")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Mezcla_Pigmento", "MezPigmento1C2")
                        .WithMany()
                        .HasForeignKey("MezPigmto_Id1xCapa2")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Mezcla_Pigmento", "MezPigmento1C3")
                        .WithMany()
                        .HasForeignKey("MezPigmto_Id1xCapa3")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Mezcla_Pigmento", "MezPigmento2C1")
                        .WithMany()
                        .HasForeignKey("MezPigmto_Id2xCapa1")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Mezcla_Pigmento", "MezPigmento2C2")
                        .WithMany()
                        .HasForeignKey("MezPigmto_Id2xCapa2")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Mezcla_Pigmento", "MezPigmento2C3")
                        .WithMany()
                        .HasForeignKey("MezPigmto_Id2xCapa3")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Usuario", "Usua")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MaterialMP");

                    b.Navigation("MezMaterial_MP1C1");

                    b.Navigation("MezMaterial_MP1C2");

                    b.Navigation("MezMaterial_MP1C3");

                    b.Navigation("MezMaterial_MP2C1");

                    b.Navigation("MezMaterial_MP2C2");

                    b.Navigation("MezMaterial_MP2C3");

                    b.Navigation("MezMaterial_MP3C1");

                    b.Navigation("MezMaterial_MP3C2");

                    b.Navigation("MezMaterial_MP3C3");

                    b.Navigation("MezMaterial_MP4C1");

                    b.Navigation("MezMaterial_MP4C2");

                    b.Navigation("MezMaterial_MP4C3");

                    b.Navigation("MezPigmento1C1");

                    b.Navigation("MezPigmento1C2");

                    b.Navigation("MezPigmento1C3");

                    b.Navigation("MezPigmento2C1");

                    b.Navigation("MezPigmento2C2");

                    b.Navigation("MezPigmento2C3");

                    b.Navigation("Usua");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Orden_Compra", b =>
                {
                    b.HasOne("PlasticaribeApi_Prueba.Models.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("Estado_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Proveedor", "Proveedor")
                        .WithMany()
                        .HasForeignKey("Prov_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Tipo_Documento", "TipoDoc")
                        .WithMany()
                        .HasForeignKey("TpDoc_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Usuario", "Usua")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Estado");

                    b.Navigation("Proveedor");

                    b.Navigation("TipoDoc");

                    b.Navigation("Usua");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Orden_Trabajo", b =>
                {
                    b.HasOne("PlasticaribeApi_Prueba.Models.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("Estado_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Mezcla", "Mezcla")
                        .WithMany()
                        .HasForeignKey("Mezcla_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.PedidoExterno", "PedidoExterno")
                        .WithMany()
                        .HasForeignKey("PedExt_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Producto", "Prod")
                        .WithMany()
                        .HasForeignKey("Prod_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.SedesClientes", "SedeCli")
                        .WithMany()
                        .HasForeignKey("SedeCli_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Unidad_Medida", "Unidad_Medida")
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Estado");

                    b.Navigation("Mezcla");

                    b.Navigation("PedidoExterno");

                    b.Navigation("Prod");

                    b.Navigation("SedeCli");

                    b.Navigation("Unidad_Medida");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.OT_Extrusion", b =>
                {
                    b.HasOne("PlasticaribeApi_Prueba.Models.Formato", "Formato")
                        .WithMany()
                        .HasForeignKey("Formato_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Material_MatPrima", "Material_MatPrima")
                        .WithMany()
                        .HasForeignKey("Material_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Orden_Trabajo", "Orden_Trabajo")
                        .WithMany()
                        .HasForeignKey("Ot_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Pigmento", "Pigmento")
                        .WithMany()
                        .HasForeignKey("Pigmt_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Tratado", "Tratado")
                        .WithMany()
                        .HasForeignKey("Tratado_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Unidad_Medida", "Unidad_Medida")
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Formato");

                    b.Navigation("Material_MatPrima");

                    b.Navigation("Orden_Trabajo");

                    b.Navigation("Pigmento");

                    b.Navigation("Tratado");

                    b.Navigation("Unidad_Medida");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.OT_Impresion", b =>
                {
                    b.HasOne("PlasticaribeApi_Prueba.Models.Orden_Trabajo", "Orden_Trabajo")
                        .WithMany()
                        .HasForeignKey("Ot_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Tinta", "Tinta1")
                        .WithMany()
                        .HasForeignKey("Tinta1_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Tinta", "Tinta2")
                        .WithMany()
                        .HasForeignKey("Tinta2_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Tinta", "Tinta3")
                        .WithMany()
                        .HasForeignKey("Tinta3_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Tinta", "Tinta4")
                        .WithMany()
                        .HasForeignKey("Tinta4_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Tinta", "Tinta5")
                        .WithMany()
                        .HasForeignKey("Tinta5_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Tinta", "Tinta6")
                        .WithMany()
                        .HasForeignKey("Tinta6_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Tinta", "Tinta7")
                        .WithMany()
                        .HasForeignKey("Tinta7_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Tinta", "Tinta8")
                        .WithMany()
                        .HasForeignKey("Tinta8_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Tipos_Impresion", "Tipos_Impresion")
                        .WithMany()
                        .HasForeignKey("TpImpresion_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Orden_Trabajo");

                    b.Navigation("Tinta1");

                    b.Navigation("Tinta2");

                    b.Navigation("Tinta3");

                    b.Navigation("Tinta4");

                    b.Navigation("Tinta5");

                    b.Navigation("Tinta6");

                    b.Navigation("Tinta7");

                    b.Navigation("Tinta8");

                    b.Navigation("Tipos_Impresion");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.OT_Laminado", b =>
                {
                    b.HasOne("PlasticaribeApi_Prueba.Models.Laminado_Capa", "Laminado_Capa")
                        .WithMany()
                        .HasForeignKey("Capa_Id1")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Laminado_Capa", "Laminado_Capa2")
                        .WithMany()
                        .HasForeignKey("Capa_Id2")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Laminado_Capa", "Laminado_Capa3")
                        .WithMany()
                        .HasForeignKey("Capa_Id3")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Orden_Trabajo", "Orden_Trabajo")
                        .WithMany()
                        .HasForeignKey("OT_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Laminado_Capa");

                    b.Navigation("Laminado_Capa2");

                    b.Navigation("Laminado_Capa3");

                    b.Navigation("Orden_Trabajo");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.PedidoExterno", b =>
                {
                    b.HasOne("PlasticaribeApi_Prueba.Models.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("Empresa_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("Estado_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.SedesClientes", "SedeCli")
                        .WithMany()
                        .HasForeignKey("SedeCli_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PlasticaribeApi_Prueba.Models.Usuario", "Usua")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Empresa");

                    b.Navigation("Estado");

                    b.Navigation("SedeCli");

                    b.Navigation("Usua");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.PedidoProducto", b =>
                {
                    b.HasOne("PlasticaribeApi_Prueba.Models.PedidoExterno", "PedidoExt")
                        .WithMany("PedExtProd")
                        .HasForeignKey("PedExt_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Producto", "Product")
                        .WithMany("PedExtProd")
                        .HasForeignKey("Prod_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Unidad_Medida", "UndMed")
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PedidoExt");

                    b.Navigation("Product");

                    b.Navigation("UndMed");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.PreEntrega_RolloDespacho", b =>
                {
                    b.HasOne("PlasticaribeApi_Prueba.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Producto", b =>
                {
                    b.HasOne("PlasticaribeApi_Prueba.Models.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("Estado_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PlasticaribeApi_Prueba.Models.Material_MatPrima", "MaterialMP")
                        .WithMany()
                        .HasForeignKey("Material_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PlasticaribeApi_Prueba.Models.Pigmento", "Pigmt")
                        .WithMany()
                        .HasForeignKey("Pigmt_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PlasticaribeApi_Prueba.Models.Tipo_Producto", "TpProd")
                        .WithMany()
                        .HasForeignKey("TpProd_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Tipos_Sellados", "TiposSellados")
                        .WithMany()
                        .HasForeignKey("TpSellado_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PlasticaribeApi_Prueba.Models.Unidad_Medida", "UndMed2")
                        .WithMany()
                        .HasForeignKey("UndMedACF")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Unidad_Medida", "UndMed1")
                        .WithMany()
                        .HasForeignKey("UndMedPeso")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Estado");

                    b.Navigation("MaterialMP");

                    b.Navigation("Pigmt");

                    b.Navigation("TiposSellados");

                    b.Navigation("TpProd");

                    b.Navigation("UndMed1");

                    b.Navigation("UndMed2");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Provedor_MateriaPrima", b =>
                {
                    b.HasOne("PlasticaribeApi_Prueba.Models.Materia_Prima", "MatPri")
                        .WithMany("ProvMatPri")
                        .HasForeignKey("MatPri_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Proveedor", "Prov")
                        .WithMany("ProvMatPri")
                        .HasForeignKey("Prov_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MatPri");

                    b.Navigation("Prov");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Proveedor", b =>
                {
                    b.HasOne("PlasticaribeApi_Prueba.Models.TipoIdentificacion", "TipoIdentificacion")
                        .WithMany()
                        .HasForeignKey("TipoIdentificacion_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Tipo_Proveedor", "TpProv")
                        .WithMany()
                        .HasForeignKey("TpProv_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TipoIdentificacion");

                    b.Navigation("TpProv");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Recuperado_MatPrima", b =>
                {
                    b.HasOne("PlasticaribeApi_Prueba.Models.Proceso", "Proceso")
                        .WithMany()
                        .HasForeignKey("Proc_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Usuario", "Usua")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Proceso");

                    b.Navigation("Usua");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Remision", b =>
                {
                    b.HasOne("PlasticaribeApi_Prueba.Models.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("Estado_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Proveedor", "Prov")
                        .WithMany()
                        .HasForeignKey("Prov_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Tipo_Documento", "TpDoc")
                        .WithMany()
                        .HasForeignKey("TpDoc_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Usuario", "Usua")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Estado");

                    b.Navigation("Prov");

                    b.Navigation("TpDoc");

                    b.Navigation("Usua");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Remision_FacturaCompra", b =>
                {
                    b.HasOne("PlasticaribeApi_Prueba.Models.Factura_Compra", "Faccom")
                        .WithMany("RemiFacco")
                        .HasForeignKey("Facco_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Remision", "Remi")
                        .WithMany("RemiFacco")
                        .HasForeignKey("Rem_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Faccom");

                    b.Navigation("Remi");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Remision_MateriaPrima", b =>
                {
                    b.HasOne("PlasticaribeApi_Prueba.Models.Materia_Prima", "MatPri")
                        .WithMany()
                        .HasForeignKey("MatPri_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Remision", "Rem")
                        .WithMany()
                        .HasForeignKey("Rem_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Tinta", "Tinta")
                        .WithMany()
                        .HasForeignKey("Tinta_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Unidad_Medida", "UndMed")
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MatPri");

                    b.Navigation("Rem");

                    b.Navigation("Tinta");

                    b.Navigation("UndMed");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.SedesClientes", b =>
                {
                    b.HasOne("PlasticaribeApi_Prueba.Models.Clientes", "Cli")
                        .WithMany()
                        .HasForeignKey("Cli_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cli");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Tinta", b =>
                {
                    b.HasOne("PlasticaribeApi_Prueba.Models.Categoria_MatPrima", "CatMP")
                        .WithMany()
                        .HasForeignKey("CatMP_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Tipo_Bodega", "TpBod")
                        .WithMany()
                        .HasForeignKey("TpBod_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Unidad_Medida", "UndMed")
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CatMP");

                    b.Navigation("TpBod");

                    b.Navigation("UndMed");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Tinta_MateriaPrima", b =>
                {
                    b.HasOne("PlasticaribeApi_Prueba.Models.Materia_Prima", "MatPri")
                        .WithMany("TintaMatPri")
                        .HasForeignKey("MatPri_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Tinta", "Tinta")
                        .WithMany("TintaMatPri")
                        .HasForeignKey("Tinta_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MatPri");

                    b.Navigation("Tinta");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Tipo_Bodega", b =>
                {
                    b.HasOne("PlasticaribeApi_Prueba.Models.Area", "Area")
                        .WithMany()
                        .HasForeignKey("Area_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Area");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Usuario", b =>
                {
                    b.HasOne("PlasticaribeApi_Prueba.Models.Area", "Area")
                        .WithMany()
                        .HasForeignKey("Area_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("Empresa_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("Estado_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Rol_Usuario", "RolUsu")
                        .WithMany()
                        .HasForeignKey("RolUsu_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.TipoIdentificacion", "TipoIdentificacion")
                        .WithMany()
                        .HasForeignKey("TipoIdentificacion_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.cajaCompensacion", "cajComp")
                        .WithMany()
                        .HasForeignKey("cajComp_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.EPS", "EPS")
                        .WithMany()
                        .HasForeignKey("eps_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.fondoPension", "fPen")
                        .WithMany()
                        .HasForeignKey("fPen_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeApi_Prueba.Models.Tipo_Usuario", "tpUsu")
                        .WithMany()
                        .HasForeignKey("tpUsu_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Area");

                    b.Navigation("EPS");

                    b.Navigation("Empresa");

                    b.Navigation("Estado");

                    b.Navigation("RolUsu");

                    b.Navigation("TipoIdentificacion");

                    b.Navigation("cajComp");

                    b.Navigation("fPen");

                    b.Navigation("tpUsu");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Asignacion_BOPP", b =>
                {
                    b.Navigation("DetAsigBOPP");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Asignacion_MatPrima", b =>
                {
                    b.Navigation("DetAsigTinta");

                    b.Navigation("DtAsigMatPri");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Asignacion_MatPrimaXTinta", b =>
                {
                    b.Navigation("DetAsigMPxTinta");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.AsignacionProducto_FacturaVenta", b =>
                {
                    b.Navigation("DtAsigProd_FVTA");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.BOPP", b =>
                {
                    b.Navigation("DetAsigBOPP");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Clientes", b =>
                {
                    b.Navigation("CliProd");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Devolucion_MatPrima", b =>
                {
                    b.Navigation("DetDevMatPri");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Devolucion_ProductoFacturado", b =>
                {
                    b.Navigation("DtDevProd_Fact");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Factura_Compra", b =>
                {
                    b.Navigation("RemiFacco");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Materia_Prima", b =>
                {
                    b.Navigation("DetAsigMPxTinta");

                    b.Navigation("DetDevMatPri");

                    b.Navigation("DetRecMatPri");

                    b.Navigation("DtAsigMatPri");

                    b.Navigation("ProvMatPri");

                    b.Navigation("TintaMatPri");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.PedidoExterno", b =>
                {
                    b.Navigation("PedExtProd");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Producto", b =>
                {
                    b.Navigation("CliProd");

                    b.Navigation("DtAsigProd_FVTA");

                    b.Navigation("DtDevProd_Fact");

                    b.Navigation("PedExtProd");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Proveedor", b =>
                {
                    b.Navigation("ProvMatPri");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Recuperado_MatPrima", b =>
                {
                    b.Navigation("DetRecMatPri");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Remision", b =>
                {
                    b.Navigation("RemiFacco");
                });

            modelBuilder.Entity("PlasticaribeApi_Prueba.Models.Tinta", b =>
                {
                    b.Navigation("DetAsigTinta");

                    b.Navigation("TintaMatPri");
                });
#pragma warning restore 612, 618
        }
    }
}
